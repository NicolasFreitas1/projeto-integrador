generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid()) @map("id_user") @db.Uuid
  name     String @map("nm_user") @db.VarChar(250)
  login    String @unique @map("nm_login") @db.VarChar(150)
  password String @map("vl_password") @db.VarChar(250)

  notifications Notification[]

  @@map("user")
}

model Notification {
  id          String    @id @default(uuid()) @map("id_notification") @db.Uuid
  title       String    @map("ds_title") @db.VarChar(150)
  description String    @map("ds_notification") @db.VarChar(500)
  createdAt   DateTime  @default(now()) @map("dt_created")
  readAt      DateTime? @map("dt_read")
  recipientId String    @map("id_recipient") @db.Uuid

  recipient User @relation(fields: [recipientId], references: [id])

  @@map("notification")
}

model Tag {
  id   String @id @default(uuid()) @map("id_category") @db.Uuid
  name String @unique @map("nm_tag") @db.VarChar(150)

  productTags ProductTag[]

  @@map("tag")
}

model Product {
  id        String   @id @default(uuid()) @map("id_product") @db.Uuid
  name      String   @map("nm_product") @db.VarChar(250)
  quantity  Int      @map("vl_quantity")
  value     Float    @map("vl_product")
  barcode   String   @unique @map("cd_barcode") @db.Text
  createdAt DateTime @map("dt_created")

  sales Sale[]

  productTag ProductTag[]

  @@map("product")
}

model ProductTag {
  id        String @id @default(uuid()) @map("id_product_tag") @db.Uuid
  productId String @map("id_product") @db.Uuid
  tagId     String @map("id_category") @db.Uuid

  tag     Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_tag")
}

model Sale {
  id        String   @id @default(uuid()) @map("id_sale") @db.Uuid
  value     Float    @map("vl_sale")
  quantity  Int      @map("vl_quantity")
  soldAt    DateTime @default(now()) @map("dt_sold")
  productId String   @map("id_product") @db.Uuid

  product Product @relation(fields: [productId], references: [id])

  @@map("sale")
}
